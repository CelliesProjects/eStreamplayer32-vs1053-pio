; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; For ESP32 specific info visit
; https://docs.platformio.org/en/latest/platforms/espressif32.html

[platformio]
description = eStreamPlayer32-vs1053-pio
default_envs = esp32dev ;ttgo-t7-v13-mini32

[user]
build_flags =
    ; SSID_NAME and SSID_PASSWORD are stored in 'include/secrets.h' as shown here:

    ;#ifndef SECRETS
    ;#define SECRETS

    ;const char *SSID_NAME= "WiFi networkname";
    ;const char *SSID_PASSWORD = "WiFi password";

    ;#endif

    -D SCRIPT_URL=\"http://192.168.0.50/music/eSP32_vs1053.php\"
    -D LIBRARY_USER=\"\" ; local library
    -D LIBRARY_PWD=\"\"

    ; If SET_STATIC_IP is set to true then STATIC_IP, GATEWAY, SUBNET and PRIMARY_DNS have to be set to some sane values
    -D SET_STATIC_IP=false
    -D STATIC_IP=\"192.168.0.20\"
    -D GATEWAY=\"192.168.0.1\"
    -D SUBNET=\"255.255.255.0\"
    -D PRIMARY_DNS=\"192.168.0.10\"

    -D NTP_POOL=\"nl.pool.ntp.org\"
    -D TIMEZONE=\"CET-1CEST,M3.5.0/2,M10.5.0/3\" ; /* Central European Time - see https://sites.google.com/a/usapiens.com/opnode/time-zones

[env]
platform = espressif32
framework = arduino   ;, espidf
check_tool = cppcheck
check_flags = --enable=all
lib_ldf_mode = chain+
build_unflags = -std=c++11
build_flags =
    ${user.build_flags}
    -std=c++17
    -D CORE_DEBUG_LEVEL=3     
    ;ESP_LOG_NONE,       0
    ;ESP_LOG_ERROR,      1
    ;ESP_LOG_WARN,       2
    ;ESP_LOG_INFO,       3
    ;ESP_LOG_DEBUG,      4
    ;ESP_LOG_VERBOSE     5

    -Wall
    -Werror
    -Wextra
    -Wunreachable-code
    !echo '-D GIT_VERSION=\\"'$(git describe --tags --always)'\\"'

platform_packages =
    platformio/framework-arduinoespressif32@^3.20011.230801

lib_deps =
    esphome/AsyncTCP-esphome@^2.0.1
    esphome/ESPAsyncWebServer-esphome@^3.0.1
    VS1053 = https://github.com/baldram/ESP_VS1053_Library#824f82c
    ;CelliesProjects/ESP32_VS1053_Stream@^2.0.6
    ESP32_VS1053_Stream = https://github.com/CelliesProjects/ESP32_VS1053_Stream#fac9194

upload_speed = 921600
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

board_build.f_cpu = 240000000L
board_build.partitions = noota_ffat.csv
board_build.f_flash = 80000000L
board_build.flash_mode = qio
board_build.filesystem = fatfs

[env:esp32dev]
board = esp32dev
board_build.mcu = esp32
build_flags =
    ${env.build_flags}
    -D VS1053_CS_PIN=5
    -D VS1053_DCS_PIN=21
    -D VS1053_DREQ_PIN=22
    -D SPI_CLK_PIN=18
    -D SPI_MISO_PIN=19
    -D SPI_MOSI_PIN=23
    ; XRST from VS1053 connects to ENABLE or RESET on esp32
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

[env:lolin_s2_mini]
board = lolin_s2_mini
board_build.mcu = esp32s2
upload_port = /dev/ttyACM0
build_flags =
    ${env.build_flags}
    -D VS1053_CS_PIN=12
    -D VS1053_DCS_PIN=33
    -D VS1053_DREQ_PIN=35
    -D SPI_CLK_PIN=7
    -D SPI_MISO_PIN=9
    -D SPI_MOSI_PIN=11
    ; XRST from VS1053 connects to ENABLE or RESET on esp32

[env:lolin_s3_mini]
board = lolin_s3_mini
board_build.mcu = esp32s3
upload_port = /dev/ttyACM0
build_flags =
    ${env.build_flags}
    -D ARDUINO_USB_CDC_ON_BOOT=1
    -D ARDUINO_USB_DFU_ON_BOOT=0
    -D VS1053_CS_PIN=10
    -D VS1053_DCS_PIN=35
    -D VS1053_DREQ_PIN=36
    -D SPI_CLK_PIN=12
    -D SPI_MISO_PIN=13
    -D SPI_MOSI_PIN=11
    ; XRST from VS1053 connects to ENABLE or RESET on esp32

[env:ttgo-t7-v13-mini32]
platform = espressif32
board = ttgo-t7-v13-mini32
build_flags =
    ${env.build_flags}
    -D VS1053_CS_PIN=5
    -D VS1053_DCS_PIN=21
    -D VS1053_DREQ_PIN=22
    -D SPI_CLK_PIN=18
    -D SPI_MISO_PIN=19
    -D SPI_MOSI_PIN=23
    ; XRST from VS1053 connects to ENABLE or RESET on esp32
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

[env:ttgo-t7-v14-mini32]
platform = espressif32
board = ttgo-t7-v13-mini32
build_flags =
    ${env.build_flags}
    -D VS1053_CS_PIN=5
    -D VS1053_DCS_PIN=21
    -D VS1053_DREQ_PIN=22
    -D SPI_CLK_PIN=18
    -D SPI_MISO_PIN=19
    -D SPI_MOSI_PIN=23
    ; XRST from VS1053 connects to ENABLE or RESET on esp32
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

[env:esp32s3box]
platform = espressif32
board = esp32s3box
board_build.mcu = esp32s3
board_build.f_cpu = 240000000L
; board_build.flash_mode = qio
build_flags =
    ${env.build_flags}
    -D VS1053_CS_PIN=10
    -D VS1053_DCS_PIN=21
    -D VS1053_DREQ_PIN=42                    
    -D SPI_CLK_PIN=12
    -D SPI_MISO_PIN=13
    -D SPI_MOSI_PIN=11
    ; XRST from VS1053 connects to pin 41 that has to be HIGH to enable the codec
    -D VS1053_RST_PIN=41

[env:esp32c3]
platform = espressif32
board = esp32c3
board_build.mcu = esp32c3
board_build.f_cpu = 240000000L
; board_build.flash_mode = qio
build_flags =
    ${env.build_flags}
    -D VS1053_CS_PIN=10
    -D VS1053_DCS_PIN=21
    -D VS1053_DREQ_PIN=42                    
    -D SPI_CLK_PIN=12
    -D SPI_MISO_PIN=13
    -D SPI_MOSI_PIN=11
    ; XRST from VS1053 connects to ENABLE or RESET on the esp32c3
    -D VS1053_RST_PIN=41